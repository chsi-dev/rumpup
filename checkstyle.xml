<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
                "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
                "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <!--<module name="JavadocPackage"/>-->
        <module name="TreeWalker">
            <module name="SuppressWarningsHolder"/>
            <module name="OuterTypeFilename"/>
            <module name="IllegalTokenText">
                <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
                <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
                <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
            </module>
        <!-- Force clean imports (no redundant and unused imports) -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
            <module name="WhitespaceAround">
                <property name="allowEmptyConstructors" value="true"/>
                <property name="allowEmptyMethods" value="true"/>
                <property name="allowEmptyTypes" value="true"/>
                <property name="allowEmptyLoops" value="true"/>
                <message key="ws.notFollowed"
                         value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
                <message key="ws.notPreceded"
                         value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
            </module>
            <module name="OneStatementPerLine"/>
            <module name="MultipleVariableDeclarations"/>
            <module name="ArrayTypeStyle"/>
            <module name="MissingSwitchDefault"/>
            <module name="FallThrough"/>
            <module name="UpperEll"/>
            <module name="ModifierOrder"/>
            <module name="EmptyLineSeparator">
                <property name="allowNoEmptyLineBetweenFields" value="true"/>
            </module>
            <module name="SeparatorWrap">
                <property name="tokens" value="DOT"/>
                <property name="option" value="nl"/>
            </module>
            <module name="SeparatorWrap">
                <property name="tokens" value="COMMA"/>
                <property name="option" value="EOL"/>
            </module>
            <module name="PackageName">
                <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
                <message key="name.invalidPattern"
                         value="Package name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="TypeName">
                <message key="name.invalidPattern"
                         value="Type name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="MemberName">
                <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
                <message key="name.invalidPattern"
                         value="Member name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="ParameterName">
                <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
                <message key="name.invalidPattern"
                         value="Parameter name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="LocalVariableName">
                <property name="tokens" value="VARIABLE_DEF"/>
                <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
                <property name="allowOneCharVarInForLoop" value="true"/>
                <message key="name.invalidPattern"
                         value="Local variable name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="ClassTypeParameterName">
                <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                <message key="name.invalidPattern"
                         value="Class type name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="MethodTypeParameterName">
                <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                <message key="name.invalidPattern"
                         value="Method type name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="InterfaceTypeParameterName">
                <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                <message key="name.invalidPattern"
                         value="Interface type name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="NoFinalizer"/>
            <module name="GenericWhitespace">
                <message key="ws.followed"
                         value="GenericWhitespace ''{0}'' is followed by whitespace."/>
                <message key="ws.preceded"
                         value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
                <message key="ws.illegalFollow"
                         value="GenericWhitespace ''{0}'' should followed by whitespace."/>
                <message key="ws.notPreceded"
                         value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
            </module>
            <module name="Indentation">
                <property name="basicOffset" value="4"/>
                <property name="braceAdjustment" value="0"/>
                <property name="caseIndent" value="4"/>
                <property name="throwsIndent" value="4"/>
                <property name="lineWrappingIndentation" value="4"/>
                <property name="arrayInitIndent" value="4"/>
            </module>
            <module name="AbbreviationAsWordInName">
                <property name="ignoreFinal" value="false"/>
                <property name="allowedAbbreviationLength" value="3"/>
            </module>
            <module name="OverloadMethodsDeclarationOrder"/>
            <module name="VariableDeclarationUsageDistance"/>
            <module name="EqualsHashCode"/>
            <module name="CovariantEquals"/>
            <module name="SimplifyBooleanExpression"/>
            <module name="SimplifyBooleanReturn"/>
            <module name="StringLiteralEquality"/>
            <module name="ParameterAssignment"/>
            <module name="DefaultComesLast"/>
            <module name="OneStatementPerLine"/>
            <module name="InnerAssignment"/>
            <module name="MissingDeprecated"/>
            <module name="ModifiedControlVariable"/>
            <module name="DeclarationOrder"/>
            <module name="ConstantName"/>
            <module name="AnnotationLocation">
                <property name="allowSamelineMultipleAnnotations" value="false"/>
                <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
            </module>
            <module name="HiddenField">
                <property name="ignoreConstructorParameter" value="true"/>
                <property name="ignoreSetter" value="true"/>
                <property name="setterCanReturnItsClass" value="true"/>
                <property name="tokens" value="VARIABLE_DEF, LAMBDA"/>
            </module>
            <module name="CustomImportOrder">
                <property name="standardPackageRegExp" value="^(java\.|javax\.)"/>
                <property name="sortImportsInGroupAlphabetically" value="true"/>
                <property name="customImportOrderRules" value="STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###SPECIAL_IMPORTS###STATIC"/>
            </module>
            <module name="UnusedImports"/>
            <module name="MethodParamPad"/>
            <module name="OperatorWrap">
                <property name="option" value="NL"/>
                <property name="tokens"
                          value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
            </module>
            <module name="NonEmptyAtclauseDescription"/>
            <module name="JavadocTagContinuationIndentation"/>
            <module name="JavadocParagraph"/>
            <module name="AtclauseOrder">
                <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
                <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
            </module>
            <module name="MethodName">
                <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
                <message key="name.invalidPattern"
                         value="Method name ''{0}'' must match pattern ''{1}''."/>
            </module>
            <module name="SingleLineJavadoc"/>
            <module name="EmptyCatchBlock">
                <property name="exceptionVariableName" value="expected"/>
            </module>
            <module name="CommentsIndentation"/>
            <module name="ParenPad"/>
            <module name="TypecastParenPad"/>
            <module name="WhitespaceAfter"/>
            <module name="NoWhitespaceAfter"/>
            <module name="NoWhitespaceBefore"/>
            <module name="EmptyForIteratorPad"/>
            <module name="EmptyForInitializerPad"/>
    </module>
</module>